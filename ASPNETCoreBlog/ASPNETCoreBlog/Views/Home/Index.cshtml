@model HomePage

@{
    ViewData["Title"] = Model.Title;
    Layout = "_HomeLayout";
    var pipeline = new MarkdownPipelineBuilder()
                           .UseAdvancedExtensions()
                           .UseSmartyPants()
                           .UseEmojiAndSmiley()
                           .Build();
    var content = Markdown.ToHtml(Model.Content, pipeline);
    var beforeContent = Markdown.ToHtml(Model.BeforeContent, pipeline);
    var afterContent = Markdown.ToHtml(Model.AfterContent, pipeline);
    var footerContent = Markdown.ToHtml(Model.FooterContent, pipeline);
    var callToAction = Markdown.ToHtml(Model.CallToAction, pipeline);
}


<!-- Hero -->
<div class="d-flex align-items-center bg-skew bg-skew-primary text-white min-vh-75 overflow-hidden">
    <div class="col-lg-8 text-center mx-auto">
        @Html.Raw(callToAction)
    </div>
</div>

<div class="bg-skew bg-skew-light">

    <!-- Icon blocks -->
    <div class="container pt-4 pb-5">
        @Html.Raw(beforeContent)
    </div>

    <div class="divider mx-auto"></div>

    <!-- Icon blocks -->
    <div class="container pt-4 pb-5">
        @Html.Raw(content)
    </div>

    <div class="divider mx-auto"></div>

    <div class="container pt-4 pb-5">
        @Html.Raw(afterContent)
    </div>

    <div class="divider mx-auto"></div>

    <div class="container pt-4 pb-5">
        @Html.Raw(footerContent)
    </div>

    <div class="divider mx-auto"></div>

    <div class="container py-5">
        <cache expires-after="@TimeSpan.FromSeconds(30)">@await Component.InvokeAsync("ShowFeaturedBlogPost")</cache>
    </div>

</div><!-- end bg-skew -->
@section MetaTags {
    <link rel="canonical" href="@Url.AbsoluteUrl()" />

    <meta name="robots" content="all" />
    <meta name="keywords" content="@Model.MetaKeywords" />
    <meta name="description" content="@Model.MetaDescription" />
    <meta name="generator" content="DojoHaven Training & Consulting LLP" />
    <meta name="audience" content="all" />
}
