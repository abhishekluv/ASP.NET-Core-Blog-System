@model LoginViewModel

@{
    ViewData["Title"] = "Login";
    Layout = "_AuthLayout";
}

@if (ViewData["ForbiddenAccess"] != null)
{
    <p class="alert alert-danger">@ViewData["ForbiddenAccess"]</p>
}
else
{
    <h1>Login</h1>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <form asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="mb-3">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <recaptcha callback="recaptchaCallback" error-callback="recaptchaCallbackDisable" />
                </div>
                <div class="mb-3">
                    <input type="submit" value="Login" class="btn btn-primary disabled" id="btnSubmit"/>
                </div>
            </form>
            <script>
                function recaptchaCallback() {
                    var btnSubmit = document.getElementById("btnSubmit");

                    if (btnSubmit.classList.contains("disabled")) {
                        btnSubmit.classList.remove("disabled");
                    }
                }

                function recaptchaCallbackDisable() {
                    var btnSubmit = document.getElementById("btnSubmit");

                    if (!btnSubmit.classList.contains("disabled")) {
                        btnSubmit.classList.add("disabled");
                    }
                }
            </script>
        </div>
    </div>
}
